## Secret Definition
apiVersion: v1
kind: Secret
metadata:
  name: db-credentials
type: Opaque
data:
  username: YWRtaW4=
  password: U2VjcmV0UGFzc3dvcmQh
  db-name: aGVsbG8tZGF0YWJhc2U=
---

## Deployment definition
apiVersion: apps/v1
kind: Deployment
metadata:
  name: hello-deployment
  labels:
    app: hello
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hello
  template:
    metadata:
      labels:
        app: hello
    spec:
      containers:
      - name: hello
        image: 117000019572.dkr.ecr.us-east-1.amazonaws.com/hello:latest
        imagePullPolicy: Always
        securityContext:
          # For AWS Fargate usage
          # allowPrivilegeEscalation: true
          # privileged: true
          runAsUser: 0
        ports:
        - containerPort: 8000
        env:
        - name: DB_NAME
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: db-name
        - name: DB_USER
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: username
        - name: DB_PASSWORD
          valueFrom:
            secretKeyRef:
              name: db-credentials
              key: password
---

## Service Definition
apiVersion: v1
kind: Service
metadata:
  name: hello-service
  labels:
    app: hello
  # For AWS Usage
  annotations:
    service.beta.kubernetes.io/aws-load-balancer-type: external
    service.beta.kubernetes.io/aws-load-balancer-nlb-target-type: ip
    service.beta.kubernetes.io/aws-load-balancer-scheme: internet-facing
spec:
  # For AWS Usage
  # type: NodePort
  type: LoadBalancer
  selector:
    app: hello
  ports:
  - protocol: TCP
    port: 8000
    targetPort: 8000
    # For AWS Usage
    # nodePort: 30000
